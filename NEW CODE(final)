import pygame, sys, random, time, math

mainClock = pygame.time.Clock()
from pygame.locals import *

pygame.init()

mes = pygame.image.load("../Pop Up/Narrative Form.png")

volume = 1.0

screen = pygame.display.set_mode((500, 700))
pygame.display.set_caption("Image Button Example")
bg = pygame.image.load("../Background/Original snake IG main menu bg.png")

def play_background_music():
    pygame.mixer.init()
    pygame.mixer.music.load('../Music & Text/chill music.mp3')
    pygame.mixer.music.play(loops=-1)


def stop_background_music():
    pygame.mixer.music.stop()

def show_pop_up_for_seconds(img, seconds):
    start_time = time.time()
    while time.time() - start_time < seconds:
        screen.blit(mes, (0, 0))
        pygame.display.update()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == KEYDOWN and event.key == K_ESCAPE:
                return
show_pop_up_for_seconds(mes, 8)

text_font = pygame.font.Font("../Music & Text/PressStart2P-vaV7.ttf", 25)
def draw_text(text, font, text_col, x, y):
    img = font.render(text, True, text_col)
    screen.blit(img, (x, y))
def main_menu():
    play_background_music()
    click = False
    start_time = time.time()
    while True:
        screen.blit(bg, (0, 0))

        current_time = time.time()
        amplitude = 15
        period = 3
        y_offset = math.sin((current_time - start_time) * 2 * math.pi / period) * amplitude

        draw_text("Stat", text_font, (0, 0, 0), 400, 275)
        draw_text("Set", text_font, (0, 0, 0), 425, 60)
        draw_text("Rules", text_font, (0, 0, 0), 16, 75)

        mx, my = pygame.mouse.get_pos()

        button_1_img = pygame.image.load("../Button/Start_btn.png")
        button_2_img = pygame.image.load("../Button/Scroll.png")
        button_3_img = pygame.image.load("../Button/Settings.png")
        button_4_img = pygame.image.load("../Button/Menu.png")

        button_1_rect = button_1_img.get_rect(topleft=(100, 450+ y_offset))
        button_2_rect = button_2_img.get_rect(topleft=(425, 200))
        button_3_rect = button_3_img.get_rect(topleft=(425, 3))
        button_4_rect = button_4_img.get_rect(topleft=(25, 2))

        screen.blit(button_1_img, button_1_rect)
        screen.blit(button_2_img, button_2_rect)
        screen.blit(button_3_img, button_3_rect)
        screen.blit(button_4_img, button_4_rect)

        microscope_img = pygame.image.load("../Images/Microscope (2).png")
        microscope_img_rect = microscope_img.get_rect(topleft=(100, 300 + y_offset))
        screen.blit(microscope_img, microscope_img_rect)

        float_img = pygame.image.load("../Images/flt image(2).png")
        float_img_rect = microscope_img.get_rect(topleft=(350, 300 + y_offset))
        screen.blit(float_img, float_img_rect)

        click = False
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == KEYDOWN:
                if event.key == K_ESCAPE:
                    pygame.quit()
                    sys.exit()
            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        if button_1_rect.collidepoint((mx, my)):
            if click:
                level_1()
        if button_2_rect.collidepoint((mx, my)):
            if click:
                scroll()
        if button_3_rect.collidepoint((mx, my)):
            if click:
                settings()
        if button_4_rect.collidepoint((mx, my)):
            if click:
                rules()

        pygame.display.update()
        mainClock.tick(60)

def level_1():
    press_sfx = pygame.mixer.Sound("../Music & Text/press_sound effect.mp3")
    walkRight = [pygame.image.load('../Movement/R1.png'), pygame.image.load('../Movement/R2.png'), pygame.image.load(
        '../Movement/R3.png'),
                 pygame.image.load('../Movement/R4.png'), pygame.image.load('../Movement/R5.png'), pygame.image.load(
            '../Movement/R6.png'),
                 pygame.image.load('../Movement/R7.png'), pygame.image.load('../Movement/R8.png'), pygame.image.load(
            '../Movement/R9.png')]
    walkLeft = [pygame.image.load('../Movement/L1.png'), pygame.image.load('../Movement/L2.png'), pygame.image.load(
        '../Movement/L3.png'),
                pygame.image.load('../Movement/L4.png'), pygame.image.load('../Movement/L5.png'), pygame.image.load(
            '../Movement/L6.png'),
                pygame.image.load('../Movement/L7.png'), pygame.image.load('../Movement/L8.png'), pygame.image.load(
            '../Movement/L9.png')]
    walkUp = [pygame.image.load('../Movement/UP1.png'), pygame.image.load('../Movement/UP2.png'), pygame.image.load(
        '../Movement/UP3.png'),
              pygame.image.load('../Movement/UP4.png'), pygame.image.load('../Movement/UP5.png'), pygame.image.load(
            '../Movement/UP6.png'),
              pygame.image.load('../Movement/UP7.png'), pygame.image.load('../Movement/UP8.png'), pygame.image.load(
            '../Movement/UP9.png')]
    walkDown = [pygame.image.load('../Movement/DOWN1.png'), pygame.image.load('../Movement/DOWN2.png'), pygame.image.load(
        '../Movement/DOWN3.png'),
                pygame.image.load('../Movement/DOWN4.png'), pygame.image.load('../Movement/DOWN5.png'), pygame.image.load(
            '../Movement/DOWN6.png'),
                pygame.image.load('../Movement/DOWN7.png'), pygame.image.load('../Movement/DOWN8.png'), pygame.image.load(
            '../Movement/DOWN9.png')]
    bg = pygame.image.load('../Background/Level 1.png')
    snake_background = pygame.image.load('../Background/Snake background.png')
    char = pygame.image.load('../Movement/L9.png')

    letters_imgs = {
        "A": pygame.image.load("../Letter/Letter A.png"),
        "B": pygame.image.load("../Letter/Letter B.png"),
        "C": pygame.image.load("../Letter/Letter C.png"),
        "D": pygame.image.load("../Letter/Letter D.png"),
        "E": pygame.image.load("../Letter/Letter E.png"),
        "F": pygame.image.load("../Letter/Letter F.png"),
        "G": pygame.image.load("../Letter/Letter G.png"),
        "H": pygame.image.load("../Letter/Letter H.png"),
        "I": pygame.image.load("../Letter/Letter I.png"),
        "J": pygame.image.load("../Letter/Letter J.png"),
        "K": pygame.image.load("../Letter/Letter K.png"),
        "L": pygame.image.load("../Letter/Letter L.png"),
        "M": pygame.image.load("../Letter/Letter M.png"),
        "N": pygame.image.load("../Letter/Letter N.png"),
        "O": pygame.image.load("../Letter/Letter O.png"),
        "P": pygame.image.load("../Letter/Letter P.png"),
        "Q": pygame.image.load("../Letter/Letter Q.png"),
        "R": pygame.image.load("../Letter/Letter R.png"),
        "S": pygame.image.load("../Letter/Letter S.png"),
        "T": pygame.image.load("../Letter/Letter T.png"),
        "U": pygame.image.load("../Letter/Letter U.png"),
        "V": pygame.image.load("../Letter/Letter V.png"),
        "W": pygame.image.load("../Letter/Letter W.png"),
        "X": pygame.image.load("../Letter/Letter X.png"),
        "Y": pygame.image.load("../Letter/Letter Y.png"),
        "Z": pygame.image.load("../Letter/Letter Z.png"),
    }


    list_of_popups = {
        "MOLECULE": pygame.image.load("../Pop Up/Molecule Pop-Up.png"),
        "COMPOUND": pygame.image.load("../Pop Up/Compound Pop Up.png"),
        "CHEMICAL": pygame.image.load("../Pop Up/Chemical Pop Up.png"),
        "SOLVENT": pygame.image.load("../Pop Up/Solvent Pop Up.png"),
        "REACTANT": pygame.image.load("../Pop Up/Reactant Pop Up.png"),
    }

    class Enemy:
        def __init__(self, x, y, width, height, img):
            self.x = x
            self.y = y
            self.width = width
            self.height = height
            self.img = img
            self.rect = pygame.Rect(x, y, width, height)

        def draw(self, win):
            win.blit(self.img, (self.x, self.y))

    def redrawGameWindow():
        global walkCount

        win.blit(bg, (0, 0))
        win.blit(snake_background, (0, 0))

        if left or right or up or down:
            if walkCount + 1 >= 27:
                walkCount = 0
            else:
                walkCount += 1
        else:
            walkCount = 0

        if left:
            win.blit(walkLeft[walkCount // 3], (x, y))
        elif right:
            win.blit(walkRight[walkCount // 3], (x, y))
        elif up:
            win.blit(walkUp[walkCount // 3], (x, y))
        elif down:
            win.blit(walkDown[walkCount // 3], (x, y))
        else:
            win.blit(char, (x, y))

        enemy.draw(win)
        pygame.display.update()

    def show_pop_up_for_seconds(img, seconds):
        start_time = time.time()
        while time.time() - start_time < seconds:
            screen.blit(img, (50, 50))
            pygame.display.update()
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()
                if event.type == KEYDOWN and event.key == K_ESCAPE:
                    return

    x = 50
    y = 500
    width = 40
    height = 60
    vel = 5

    collected_letters = []

    words = ["MOLECULE", "COMPOUND", "CHEMICAL", "SOLVENT", "REACTANT"]

    word_index = 0

    enemy_x = random.randint(50, 240)
    enemy_y = random.randint(150, 499)

    enemy = Enemy(enemy_x, enemy_y, 40, 40, letters_imgs[words[word_index][0]])

    clock = pygame.time.Clock()

    isJump = False
    jumpCount = 10

    left = False
    right = False
    up = False
    down = False
    walkCount = 0

    win = pygame.display.set_mode((500, 700))
    pygame.display.set_caption("First Game")

    run = True

    while run:
        clock.tick(27)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False

        keys = pygame.key.get_pressed()

        if keys[pygame.K_LEFT] and x > 45:
            x -= vel
            left = True
            right = False
            up = False
            down = False
        elif keys[pygame.K_RIGHT] and x < 450 - vel - height:
            x += vel
            left = False
            right = True
            up = False
            down = False
        elif keys[pygame.K_UP] and y > 175:
            y -= vel
            left = False
            right = False
            up = True
            down = False
        elif keys[pygame.K_DOWN] and y < 620 - vel - width:
            y += vel
            left = False
            right = False
            up = False
            down = True
        else:
            left = False
            right = False
            up = False
            down = False
            walkCount = 0

        if not isJump:
            if keys[pygame.K_SPACE]:
                isJump = True
                left = False
                right = False
                walkCount = 0
        else:
            if jumpCount >= -10:
                y -= (jumpCount * abs(jumpCount)) * 0.5
                jumpCount -= 1
            else:
                jumpCount = 10
                isJump = False

        player_rect = pygame.Rect(x, y, width, height)
        if player_rect.colliderect(enemy.rect):
            press_sfx.play()
            collected_letters.append(words[word_index][len(collected_letters)])

            if len(collected_letters) == len(words[word_index]):
                show_pop_up_for_seconds(list_of_popups[words[word_index]], 2)
                collected_letters.clear()
                word_index = (word_index + 1) % len(words)


            if len(collected_letters) < len(words[word_index]):
                enemy_x = random.randint(50, 240)
                enemy_y = random.randint(150, 499)
                enemy = Enemy(enemy_x, enemy_y, 40, 40, letters_imgs[words[word_index][len(collected_letters)]])

        redrawGameWindow()


        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == KEYDOWN:
                if collected_letters == ['R','E','A','C','T','A','N',]:
                    run = False

                    W = pygame.image.load("../Pop Up/Winner.png")

                    def show_pop_up_for_seconds(img, seconds):
                        start_time = time.time()
                        while time.time() - start_time < seconds:
                            screen.blit(W, (0, 0))
                            pygame.display.update()
                            for event in pygame.event.get():
                                if event.type == pygame.QUIT:
                                    pygame.quit()
                                    sys.exit()
                                if event.type == KEYDOWN and event.key == K_ESCAPE:
                                    return

                    show_pop_up_for_seconds(W, 2)
                    level_2()
            if event.type == KEYDOWN:
                if event.key == K_ESCAPE:
                    run = False

                    L = pygame.image.load("../Pop Up/Loser.png")

                    def show_pop_up_for_seconds(img, seconds):
                        start_time = time.time()
                        while time.time() - start_time < seconds:
                            screen.blit(L, (0, 0))
                            pygame.display.update()
                            for event in pygame.event.get():
                                if event.type == pygame.QUIT:
                                    pygame.quit()
                                    sys.exit()
                                if event.type == KEYDOWN and event.key == K_ESCAPE:
                                    return

                    show_pop_up_for_seconds(L, 2)
                    main_menu()

    pygame.quit()



def level_2():
    press_sfx = pygame.mixer.Sound("../Music & Text/press_sound effect.mp3")
    walkRight = [pygame.image.load('../Movement/R1.png'), pygame.image.load('../Movement/R2.png'), pygame.image.load(
        '../Movement/R3.png'),
                 pygame.image.load('../Movement/R4.png'), pygame.image.load('../Movement/R5.png'), pygame.image.load(
            '../Movement/R6.png'),
                 pygame.image.load('../Movement/R7.png'), pygame.image.load('../Movement/R8.png'), pygame.image.load(
            '../Movement/R9.png')]
    walkLeft = [pygame.image.load('../Movement/L1.png'), pygame.image.load('../Movement/L2.png'), pygame.image.load(
        '../Movement/L3.png'),
                pygame.image.load('../Movement/L4.png'), pygame.image.load('../Movement/L5.png'), pygame.image.load(
            '../Movement/L6.png'),
                pygame.image.load('../Movement/L7.png'), pygame.image.load('../Movement/L8.png'), pygame.image.load(
            '../Movement/L9.png')]
    walkUp = [pygame.image.load('../Movement/UP1.png'), pygame.image.load('../Movement/UP2.png'), pygame.image.load(
        '../Movement/UP3.png'),
              pygame.image.load('../Movement/UP4.png'), pygame.image.load('../Movement/UP5.png'), pygame.image.load(
            '../Movement/UP6.png'),
              pygame.image.load('../Movement/UP7.png'), pygame.image.load('../Movement/UP8.png'), pygame.image.load(
            '../Movement/UP9.png')]
    walkDown = [pygame.image.load('../Movement/DOWN1.png'), pygame.image.load('../Movement/DOWN2.png'), pygame.image.load(
        '../Movement/DOWN3.png'),
                pygame.image.load('../Movement/DOWN4.png'), pygame.image.load('../Movement/DOWN5.png'), pygame.image.load(
            '../Movement/DOWN6.png'),
                pygame.image.load('../Movement/DOWN7.png'), pygame.image.load('../Movement/DOWN8.png'), pygame.image.load(
            '../Movement/DOWN9.png')]
    bg = pygame.image.load('../Background/Level 2.png')
    snake_background = pygame.image.load('../Background/Snake background.png')
    char = pygame.image.load('../Movement/L9.png')

    letters_imgs = {
        "A": pygame.image.load("../Letter/Letter A.png"),
        "B": pygame.image.load("../Letter/Letter B.png"),
        "C": pygame.image.load("../Letter/Letter C.png"),
        "D": pygame.image.load("../Letter/Letter D.png"),
        "E": pygame.image.load("../Letter/Letter E.png"),
        "F": pygame.image.load("../Letter/Letter F.png"),
        "G": pygame.image.load("../Letter/Letter G.png"),
        "H": pygame.image.load("../Letter/Letter H.png"),
        "I": pygame.image.load("../Letter/Letter I.png"),
        "J": pygame.image.load("../Letter/Letter J.png"),
        "K": pygame.image.load("../Letter/Letter K.png"),
        "L": pygame.image.load("../Letter/Letter L.png"),
        "M": pygame.image.load("../Letter/Letter M.png"),
        "N": pygame.image.load("../Letter/Letter N.png"),
        "O": pygame.image.load("../Letter/Letter O.png"),
        "P": pygame.image.load("../Letter/Letter P.png"),
        "Q": pygame.image.load("../Letter/Letter Q.png"),
        "R": pygame.image.load("../Letter/Letter R.png"),
        "S": pygame.image.load("../Letter/Letter S.png"),
        "T": pygame.image.load("../Letter/Letter T.png"),
        "U": pygame.image.load("../Letter/Letter U.png"),
        "V": pygame.image.load("../Letter/Letter V.png"),
        "W": pygame.image.load("../Letter/Letter W.png"),
        "X": pygame.image.load("../Letter/Letter X.png"),
        "Y": pygame.image.load("../Letter/Letter Y.png"),
        "Z": pygame.image.load("../Letter/Letter Z.png"),
    }

    pop_up_img = pygame.image.load("../Pop Up/Molecule Pop-Up.png")

    list_of_popups = {
        "DISTILLATION": pygame.image.load("../Pop Up/DISTILLATION POP UP.png"),
        "SUBLIMATION": pygame.image.load("../Pop Up/SUBLIMATION POP UP.png"),
        "EQUILIBRIUM": pygame.image.load("../Pop Up/EQUILIBRIUM POP UP.png"),
        "SOLUBILITY": pygame.image.load("../Pop Up/SOLUBILITY POP UP.png"),
        "CONDENSATION": pygame.image.load("../Pop Up/CONDENSATION POP UP.png"),
    }

    class Enemy:
        def __init__(self, x, y, width, height, img):
            self.x = x
            self.y = y
            self.width = width
            self.height = height
            self.img = img
            self.rect = pygame.Rect(x, y, width, height)

        def draw(self, win):
            win.blit(self.img, (self.x, self.y))

    def redrawGameWindow():
        global walkCount

        win.blit(bg, (0, 0))
        win.blit(snake_background, (0, 0))

        if left or right or up or down:
            if walkCount + 1 >= 27:
                walkCount = 0
            else:
                walkCount += 1
        else:
            walkCount = 0

        if left:
            win.blit(walkLeft[walkCount // 3], (x, y))
        elif right:
            win.blit(walkRight[walkCount // 3], (x, y))
        elif up:
            win.blit(walkUp[walkCount // 3], (x, y))
        elif down:
            win.blit(walkDown[walkCount // 3], (x, y))
        else:
            win.blit(char, (x, y))

        enemy.draw(win)
        pygame.display.update()


    def show_pop_up_for_seconds(img, seconds):
        start_time = time.time()
        while time.time() - start_time < seconds:
            screen.blit(img, (50, 50))
            pygame.display.update()
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()
                if event.type == KEYDOWN and event.key == K_ESCAPE:
                    return

    x = 50
    y = 500
    width = 40
    height = 60
    vel = 5
    collected_letters = []

    words = ["DISTILLATION", "SUBLIMATION", "EQUILIBRIUM", "SOLUBILITY", "CONDENSATION"]

    word_index = 0

    enemy_x = random.randint(50, 240)
    enemy_y = random.randint(150, 499)

    enemy = Enemy(enemy_x, enemy_y, 40, 40, letters_imgs[words[word_index][0]])

    clock = pygame.time.Clock()

    isJump = False
    jumpCount = 10

    left = False
    right = False
    up = False
    down = False
    walkCount = 0

    win = pygame.display.set_mode((500, 700))
    pygame.display.set_caption("First Game")

    run = True

    while run:
        clock.tick(27)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False

        keys = pygame.key.get_pressed()

        if keys[pygame.K_LEFT] and x > 45:
            x -= vel
            left = True
            right = False
            up = False
            down = False
        elif keys[pygame.K_RIGHT] and x < 450 - vel - height:
            x += vel
            left = False
            right = True
            up = False
            down = False
        elif keys[pygame.K_UP] and y < 610 - vel - width:
            y -= vel
            left = False
            right = False
            up = True
            down = False
        elif keys[pygame.K_DOWN] and y < 620 - vel - width:
            y += vel
            left = False
            right = False
            up = False
            down = True
        else:
            left = False
            right = False
            up = False
            down = False
            walkCount = 0

        if not isJump:
            if keys[pygame.K_SPACE]:
                isJump = True
                left = False
                right = False
                walkCount = 0
        else:
            if jumpCount >= -10:
                y -= (jumpCount * abs(jumpCount)) * 0.5
                jumpCount -= 1
            else:
                jumpCount = 10
                isJump = False

        player_rect = pygame.Rect(x, y, width, height)
        if player_rect.colliderect(enemy.rect):
            press_sfx.play()
            collected_letters.append(words[word_index][len(collected_letters)])

            if len(collected_letters) == len(words[word_index]):
                show_pop_up_for_seconds(list_of_popups[words[word_index]], 2)
                collected_letters.clear()
                word_index = (word_index + 1) % len(words)

            if len(collected_letters) < len(words[word_index]):
                enemy_x = random.randint(50, 240)
                enemy_y = random.randint(150, 499)
                enemy = Enemy(enemy_x, enemy_y, 40, 40, letters_imgs[words[word_index][len(collected_letters)]])

        redrawGameWindow()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == KEYDOWN:
                if collected_letters == ['C', 'O', 'N', 'D', 'E', 'N', 'S','A','T','I','O']:
                    run = False

                    W = pygame.image.load("../Pop Up/Winner.png")

                    def show_pop_up_for_seconds(img, seconds):
                        start_time = time.time()
                        while time.time() - start_time < seconds:
                            screen.blit(W, (0, 0))
                            pygame.display.update()
                            for event in pygame.event.get():
                                if event.type == pygame.QUIT:
                                    pygame.quit()
                                    sys.exit()
                                if event.type == KEYDOWN and event.key == K_ESCAPE:
                                    return

                    show_pop_up_for_seconds(W, 2)
                    level_3()
            if event.type == KEYDOWN:
                if event.key == K_ESCAPE:
                    run = False

                    L = pygame.image.load("../Pop Up/Loser.png")

                    def show_pop_up_for_seconds(img, seconds):
                        start_time = time.time()
                        while time.time() - start_time < seconds:
                            screen.blit(L, (0, 0))
                            pygame.display.update()
                            for event in pygame.event.get():
                                if event.type == pygame.QUIT:
                                    pygame.quit()
                                    sys.exit()
                                if event.type == KEYDOWN and event.key == K_ESCAPE:
                                    return

                    show_pop_up_for_seconds(L, 2)
                    main_menu()

    pygame.quit()

def level_3():
    press_sfx = pygame.mixer.Sound("../Music & Text/press_sound effect.mp3")
    walkRight = [pygame.image.load('../Movement/R1.png'), pygame.image.load('../Movement/R2.png'), pygame.image.load(
        '../Movement/R3.png'),
                 pygame.image.load('../Movement/R4.png'), pygame.image.load('../Movement/R5.png'), pygame.image.load(
            '../Movement/R6.png'),
                 pygame.image.load('../Movement/R7.png'), pygame.image.load('../Movement/R8.png'), pygame.image.load(
            '../Movement/R9.png')]
    walkLeft = [pygame.image.load('../Movement/L1.png'), pygame.image.load('../Movement/L2.png'), pygame.image.load(
        '../Movement/L3.png'),
                pygame.image.load('../Movement/L4.png'), pygame.image.load('../Movement/L5.png'), pygame.image.load(
            '../Movement/L6.png'),
                pygame.image.load('../Movement/L7.png'), pygame.image.load('../Movement/L8.png'), pygame.image.load(
            '../Movement/L9.png')]
    walkUp = [pygame.image.load('../Movement/UP1.png'), pygame.image.load('../Movement/UP2.png'), pygame.image.load(
        '../Movement/UP3.png'),
              pygame.image.load('../Movement/UP4.png'), pygame.image.load('../Movement/UP5.png'), pygame.image.load(
            '../Movement/UP6.png'),
              pygame.image.load('../Movement/UP7.png'), pygame.image.load('../Movement/UP8.png'), pygame.image.load(
            '../Movement/UP9.png')]
    walkDown = [pygame.image.load('../Movement/DOWN1.png'), pygame.image.load('../Movement/DOWN2.png'), pygame.image.load(
        '../Movement/DOWN3.png'),
                pygame.image.load('../Movement/DOWN4.png'), pygame.image.load('../Movement/DOWN5.png'), pygame.image.load(
            '../Movement/DOWN6.png'),
                pygame.image.load('../Movement/DOWN7.png'), pygame.image.load('../Movement/DOWN8.png'), pygame.image.load(
            '../Movement/DOWN9.png')]
    bg = pygame.image.load('../Background/Level 3.png')
    snake_background = pygame.image.load('../Background/Snake background.png')
    char = pygame.image.load('../Movement/L9.png')

    letters_imgs = {
        "A": pygame.image.load("../Letter/Letter A.png"),
        "B": pygame.image.load("../Letter/Letter B.png"),
        "C": pygame.image.load("../Letter/Letter C.png"),
        "D": pygame.image.load("../Letter/Letter D.png"),
        "E": pygame.image.load("../Letter/Letter E.png"),
        "F": pygame.image.load("../Letter/Letter F.png"),
        "G": pygame.image.load("../Letter/Letter G.png"),
        "H": pygame.image.load("../Letter/Letter H.png"),
        "I": pygame.image.load("../Letter/Letter I.png"),
        "J": pygame.image.load("../Letter/Letter J.png"),
        "K": pygame.image.load("../Letter/Letter K.png"),
        "L": pygame.image.load("../Letter/Letter L.png"),
        "M": pygame.image.load("../Letter/Letter M.png"),
        "N": pygame.image.load("../Letter/Letter N.png"),
        "O": pygame.image.load("../Letter/Letter O.png"),
        "P": pygame.image.load("../Letter/Letter P.png"),
        "Q": pygame.image.load("../Letter/Letter Q.png"),
        "R": pygame.image.load("../Letter/Letter R.png"),
        "S": pygame.image.load("../Letter/Letter S.png"),
        "T": pygame.image.load("../Letter/Letter T.png"),
        "U": pygame.image.load("../Letter/Letter U.png"),
        "V": pygame.image.load("../Letter/Letter V.png"),
        "W": pygame.image.load("../Letter/Letter W.png"),
        "X": pygame.image.load("../Letter/Letter X.png"),
        "Y": pygame.image.load("../Letter/Letter Y.png"),
        "Z": pygame.image.load("../Letter/Letter Z.png"),
    }

    pop_up_img = pygame.image.load("../Pop Up/Molecule Pop-Up.png")

    list_of_popups = {
        "EXOTHERMIC": pygame.image.load("../Pop Up/EXOTHERMIC POP UP.png"),
        "KETONE": pygame.image.load("../Pop Up/KETONE POP UP.png"),
        "LIGAND": pygame.image.load("../Pop Up/LIGAND POP UP.png"),
        "RADIOACTIVITY": pygame.image.load("../Pop Up/RADIOACTIVITY POP UP.png"),
        "THERMODYNAMICS": pygame.image.load("../Pop Up/THERMODYNAMICS POP UP.png"),
    }

    class Enemy:
        def __init__(self, x, y, width, height, img):
            self.x = x
            self.y = y
            self.width = width
            self.height = height
            self.img = img
            self.rect = pygame.Rect(x, y, width, height)

        def draw(self, win):
            win.blit(self.img, (self.x, self.y))

    def redrawGameWindow():
        global walkCount

        win.blit(bg, (0, 0))
        win.blit(snake_background, (0, 0))

        if left or right or up or down:
            if walkCount + 1 >= 27:
                walkCount = 0
            else:
                walkCount += 1
        else:
            walkCount = 0

        if left:
            win.blit(walkLeft[walkCount // 3], (x, y))
        elif right:
            win.blit(walkRight[walkCount // 3], (x, y))
        elif up:
            win.blit(walkUp[walkCount // 3], (x, y))
        elif down:
            win.blit(walkDown[walkCount // 3], (x, y))
        else:
            win.blit(char, (x, y))

        enemy.draw(win)
        pygame.display.update()

    def show_pop_up_for_seconds(img, seconds):
        start_time = time.time()
        while time.time() - start_time < seconds:
            screen.blit(img, (50, 50))
            pygame.display.update()
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()
                if event.type == KEYDOWN and event.key == K_ESCAPE:
                    return

    x = 50
    y = 500
    width = 40
    height = 60
    vel = 5
    collected_letters = []

    words = ["EXOTHERMIC", "KETONE", "LIGAND", "RADIOACTIVITY", "THERMODYNAMICS"]

    word_index = 0

    enemy_x = random.randint(50, 240)
    enemy_y = random.randint(150, 499)

    enemy = Enemy(enemy_x, enemy_y, 40, 40, letters_imgs[words[word_index][0]])

    clock = pygame.time.Clock()

    isJump = False
    jumpCount = 10

    left = False
    right = False
    up = False
    down = False
    walkCount = 0

    win = pygame.display.set_mode((500, 700))
    pygame.display.set_caption("First Game")

    run = True

    while run:
        clock.tick(27)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False

        keys = pygame.key.get_pressed()

        if keys[pygame.K_LEFT] and x > 45:
            x -= vel
            left = True
            right = False
            up = False
            down = False
        elif keys[pygame.K_RIGHT] and x < 450 - vel - height:
            x += vel
            left = False
            right = True
            up = False
            down = False
        elif keys[pygame.K_UP] and y < 610 - vel - width:
            y -= vel
            left = False
            right = False
            up = True
            down = False
        elif keys[pygame.K_DOWN] and y < 620 - vel - width:
            y += vel
            left = False
            right = False
            up = False
            down = True
        else:
            left = False
            right = False
            up = False
            down = False
            walkCount = 0

        if not isJump:
            if keys[pygame.K_SPACE]:
                isJump = True
                left = False
                right = False
                walkCount = 0
        else:
            if jumpCount >= -10:
                y -= (jumpCount * abs(jumpCount)) * 0.5
                jumpCount -= 1
            else:
                jumpCount = 10
                isJump = False

        player_rect = pygame.Rect(x, y, width, height)
        if player_rect.colliderect(enemy.rect):
            press_sfx.play()
            collected_letters.append(words[word_index][len(collected_letters)])

            if len(collected_letters) == len(words[word_index]):
                show_pop_up_for_seconds(list_of_popups[words[word_index]], 2)
                collected_letters.clear()
                word_index = (word_index + 1) % len(words)

            if len(collected_letters) < len(words[word_index]):
                enemy_x = random.randint(50, 240)
                enemy_y = random.randint(150, 499)
                enemy = Enemy(enemy_x, enemy_y, 40, 40, letters_imgs[words[word_index][len(collected_letters)]])

        redrawGameWindow()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == KEYDOWN:
                if collected_letters == ['T', 'H', 'E', 'R', 'M', 'O', 'D', 'Y', 'N', 'A', 'M', 'I', 'C']:
                    run = False

                    C = pygame.image.load("Congrats.png.png")

                    def show_pop_up_for_seconds(img, seconds):
                        start_time = time.time()
                        while time.time() - start_time < seconds:
                            screen.blit(C, (0, 0))
                            pygame.display.update()
                            for event in pygame.event.get():
                                if event.type == pygame.QUIT:
                                    pygame.quit()
                                    sys.exit()
                                if event.type == KEYDOWN and event.key == K_ESCAPE:
                                    return

                    show_pop_up_for_seconds(C, 2)
                    DEF()
            if event.type == KEYDOWN:
                if event.key == K_ESCAPE:
                    run = False

                    L = pygame.image.load("../Pop Up/Loser.png")

                    def show_pop_up_for_seconds(img, seconds):
                        start_time = time.time()
                        while time.time() - start_time < seconds:
                            screen.blit(L, (0, 0))
                            pygame.display.update()
                            for event in pygame.event.get():
                                if event.type == pygame.QUIT:
                                    pygame.quit()
                                    sys.exit()
                                if event.type == KEYDOWN and event.key == K_ESCAPE:
                                    return

                    show_pop_up_for_seconds(L, 2)
                    main_menu()

    pygame.quit()
def scroll():
    bg = pygame.image.load("../Background/Missions Background.png")
    text_font = pygame.font.Font("../Music & Text/PressStart2P-vaV7.ttf", 50)

    def draw_text(text, font, text_col, x, y):
        img = font.render(text, True, text_col)
        screen.blit(img, (x, y))

    class Button:
        def __init__(self, x, y, width, height, text):
            self.rect = pygame.Rect(x, y, width, height)
            self.color = (200, 200, 200)
            self.text = text
            self.font = pygame.font.Font(None, 36)

        def draw(self, screen):
            pygame.draw.rect(screen, self.color, self.rect)
            text_surface = self.font.render(self.text, True, (0, 0, 0))
            text_rect = text_surface.get_rect(center=self.rect.center)
            screen.blit(text_surface, text_rect)

        def is_clicked(self, event):
            if event.type == pygame.MOUSEBUTTONDOWN and self.rect.collidepoint(event.pos):
                return True
            return False

    def main():
        Life = 1
        Money = 1
        Skin = 1
        Clues = 1

        button1 = Button(160, 230, 50, 25, "Add")
        button2 = Button(160, 355, 50, 25, "Add")
        button3 = Button(160, 470, 50, 25, "Add")
        button4 = Button(160, 590, 50, 25, "Add")

        button_1 = Button(160, 200, 50, 25, "Sub")
        button_2 = Button(160, 325, 50, 25, "Sub")
        button_3 = Button(160, 440, 50, 25, "Sub")
        button_4 = Button(160, 560, 50, 25, "Sub")

        running = True
        while running:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()
                if event.type == KEYDOWN and event.key == K_ESCAPE:
                    running = False
                    main_menu()

                if Money > 0  and button1.is_clicked(event):
                    Life += 1
                    Money -= 1
                    if Life >= 5:
                        Life = 5
                if button2.is_clicked(event):
                    Money += 1
                    if Money >= 9:
                        Money = 9
                if button3.is_clicked(event):
                    Skin += 1
                    Money -= 1
                    if Skin >= 5:
                        Skin = 5
                if button4.is_clicked(event):
                    Clues += 1
                    Money -= 1
                    if Clues >= 5:
                        Clues = 5

                if button_1.is_clicked(event):
                    Life -= 1
                    if Life <= 1:
                        Life = 1
                if button_2.is_clicked(event):
                    Money -= 1
                    if Money <= 1:
                        Money = 1
                if button_3.is_clicked(event):
                    Skin -= 1
                    if Skin <= 1:
                        Skin = 1
                if button_4.is_clicked(event):
                    Clues -= 1
                    if Clues <= 1:
                        Clues = 1

                if Money <= 0:
                    Money = 0

            screen.blit(bg, (0, 0))

            button1.draw(screen)
            button2.draw(screen)
            button3.draw(screen)
            button4.draw(screen)

            button_1.draw(screen)
            button_2.draw(screen)
            button_3.draw(screen)
            button_4.draw(screen)

            draw_text(f"{Life}", text_font, (0, 0, 0), 290, 203)
            draw_text(f"{Money}", text_font, (0, 0, 0), 290, 330)
            draw_text(f"{Skin}", text_font, (0, 0, 0), 290, 445)
            draw_text(f"{Clues}", text_font, (0, 0, 0), 290, 560)

            pygame.display.flip()

    if __name__ == "__main__":
        main()
def settings():
    running = True
    while running:
        bg = pygame.image.load("../Background/Settings_BACKGROUND.png")
        white = (255, 255, 255)
        black = (0, 0, 0)
        gray = (200, 200, 200)
        green = (0, 255, 0)

        pygame.mixer.music.load('../Music & Text/chill music.mp3')
        pygame.mixer.music.play(-1)

        class Slider:
            def __init__(self, x, y, width, height):
                self.rect = pygame.Rect(x, y, width, height)
                self.handle_rect = pygame.Rect(x, y, height, height)
                self.dragging = False

            def draw(self, screen):
                pygame.draw.rect(screen, gray, self.rect)
                pygame.draw.rect(screen, green if self.dragging else white, self.handle_rect)

            def handle_event(self, event):
                if event.type == pygame.MOUSEBUTTONDOWN:
                    if self.handle_rect.collidepoint(event.pos):
                        self.dragging = True
                elif event.type == pygame.MOUSEBUTTONUP:
                    self.dragging = False
                elif event.type == pygame.MOUSEMOTION:
                    if self.dragging:
                        new_x = max(self.rect.x, min(event.pos[0] - self.handle_rect.width // 2,
                                                     self.rect.x + self.rect.width - self.handle_rect.width))
                        self.handle_rect.x = new_x

            def get_volume(self):
                return (self.handle_rect.x - self.rect.x) / (self.rect.width - self.handle_rect.width)

        slider = Slider(100, 300, 300, 20)

        def main():
            text_font = pygame.font.Font("../Music & Text/PressStart2P-vaV7.ttf", 25)

            def draw_text(text, font, text_col, x, y):
                img = font.render(text, True, text_col)
                screen.blit(img, (x, y))
            running = True
            while running:
                screen.blit(bg, (0, 0))
                draw_text("Volume", text_font, (0, 0, 0), 185, 350)
                for event in pygame.event.get():
                    if event.type == pygame.QUIT:
                        main_menu()
                        running = False

                    slider.handle_event(event)

                slider.draw(screen)

                volume = slider.get_volume()
                pygame.mixer.music.set_volume(volume)

                pygame.display.flip()

            pygame.quit()
            sys.exit()

        if __name__ == "__main__":
            main()
def rules():
    running = True
    while running:
        screen.fill((0, 0, 0))
        bg = pygame.image.load("../Background/Scroll Background.png")
        screen.blit(bg, (0, 0))
        pygame.display.flip()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == KEYDOWN:
                if event.key == K_ESCAPE:
                    running = False
                    main_menu()
def DEF():
    white = (255, 255, 255)
    black = (0, 0, 0)
    gray = (200, 200, 200)
    green = (0, 255, 0)

    font = pygame.font.Font(None, 36)

    class Button:
        def __init__(self, x, y, width, height, text):
            self.rect = pygame.Rect(x, y, width, height)
            self.color = gray
            self.text = text
            self.font = font

        def draw(self, screen):
            pygame.draw.rect(screen, self.color, self.rect)
            text_surface = self.font.render(self.text, True, black)
            text_rect = text_surface.get_rect(center=self.rect.center)
            screen.blit(text_surface, text_rect)

        def is_clicked(self, event):
            if event.type == pygame.MOUSEBUTTONDOWN:
                if self.rect.collidepoint(event.pos):
                    return True
            return False

    button1 = Button(150, 200, 200, 50, "Level 1")
    button2 = Button(150, 300, 200, 50, "Level 2")
    button3 = Button(150, 400, 200, 50, "Level 3")

    def main():
        bg = pygame.image.load("../Background/Def bg.png")
        running = True
        while running:
            screen.blit(bg, (0, 0))

            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()
                if event.type == KEYDOWN:
                    if event.key == K_SPACE:
                        running = False
                        main_menu()

                def Level_1():
                    button1 = Button(10, 90, 110, 25, "Molecule")
                    button2 = Button(45, 1, 130, 25, "Compound")
                    button3 = Button(200, 1, 120, 25, "Chemical")
                    button4 = Button(350, 1, 100, 25, "Solvent")
                    button5 = Button(390, 90, 105, 25, "Reactant")

                    def1 = pygame.image.load("../Definition/L1D1.png")
                    def2 = pygame.image.load("../Definition/L1D2.png")
                    def3 = pygame.image.load("../Definition/L1D3.png")
                    def4 = pygame.image.load("../Definition/L1D4.png")
                    def5 = pygame.image.load("../Definition/L1D5.png")

                    def m():
                        running = True
                        while running:

                            for event in pygame.event.get():
                                if event.type == pygame.QUIT:
                                    pygame.quit()
                                    sys.exit()
                                if event.type == KEYDOWN:
                                    if event.key == K_ESCAPE:
                                        running = False
                                        main()

                                if button1.is_clicked(event):
                                    screen.blit(def1, (0, 0))
                                if button2.is_clicked(event):
                                    screen.blit(def2, (0, 0))
                                if button3.is_clicked(event):
                                    screen.blit(def3, (0, 0))
                                if button4.is_clicked(event):
                                    screen.blit(def4, (0, 0))
                                if button5.is_clicked(event):
                                    screen.blit(def5, (0, 0))

                            button1.draw(screen)
                            button2.draw(screen)
                            button3.draw(screen)
                            button4.draw(screen)
                            button5.draw(screen)
                            pygame.display.flip()

                    if __name__ == "__main__":
                        m()

                def Level_2():
                    button1 = Button(20, 115, 140, 25, "Distillation")
                    button2 = Button(30, 1, 150, 25, "Sublimation")
                    button3 = Button(200, 1, 140, 25, "Equilibrium")
                    button4 = Button(360, 1, 115, 25, "Solubility")
                    button5 = Button(320, 115, 170, 25, "Condensation")

                    def1 = pygame.image.load("../Definition/L2D1.png")
                    def2 = pygame.image.load("../Definition/L2D2.png")
                    def3 = pygame.image.load("../Definition/L2D3.png")
                    def4 = pygame.image.load("../Definition/L2D4.png")
                    def5 = pygame.image.load("../Definition/L2D5.png")

                    def ma():
                        running = True
                        while running:

                            for event in pygame.event.get():
                                if event.type == pygame.QUIT:
                                    pygame.quit()
                                    sys.exit()
                                if event.type == KEYDOWN:
                                    if event.key == K_ESCAPE:
                                        running = False
                                        main()

                                if button1.is_clicked(event):
                                    screen.blit(def1, (0, 0))
                                if button2.is_clicked(event):
                                    screen.blit(def2, (0, 0))
                                if button3.is_clicked(event):
                                    screen.blit(def3, (0, 0))
                                if button4.is_clicked(event):
                                    screen.blit(def4, (0, 0))
                                if button5.is_clicked(event):
                                    screen.blit(def5, (0, 0))

                            button1.draw(screen)
                            button2.draw(screen)
                            button3.draw(screen)
                            button4.draw(screen)
                            button5.draw(screen)
                            pygame.display.flip()

                    if __name__ == "__main__":
                        ma()

                def Level_3():
                    button1 = Button(20, 115, 140, 25, "Exothermic")
                    button2 = Button(40, 1, 100, 25, "Ketone")
                    button3 = Button(180, 1, 100, 25, "Ligand")
                    button4 = Button(320, 1, 160, 25, "Radioactivity")
                    button5 = Button(280, 115, 210, 25, "Thermodynamics")

                    def1 = pygame.image.load("../Definition/L3D1.png")
                    def2 = pygame.image.load("../Definition/L3D2.png")
                    def3 = pygame.image.load("../Definition/L3D3.png")
                    def4 = pygame.image.load("../Definition/L3D4.png")
                    def5 = pygame.image.load("../Definition/L3D5.png")

                    def mai():
                        running = True
                        while running:
                            for event in pygame.event.get():
                                if event.type == pygame.QUIT:
                                    pygame.quit()
                                    sys.exit()
                                if event.type == KEYDOWN:
                                    if event.key == K_ESCAPE:
                                        running = False
                                        main()

                                if button1.is_clicked(event):
                                    screen.blit(def1, (0, 0))
                                if button2.is_clicked(event):
                                    screen.blit(def2, (0, 0))
                                if button3.is_clicked(event):
                                    screen.blit(def3, (0, 0))
                                if button4.is_clicked(event):
                                    screen.blit(def4, (0, 0))
                                if button5.is_clicked(event):
                                    screen.blit(def5, (0, 0))

                            button1.draw(screen)
                            button2.draw(screen)
                            button3.draw(screen)
                            button4.draw(screen)
                            button5.draw(screen)
                            pygame.display.flip()

                    if __name__ == "__main__":
                        mai()

                if button1.is_clicked(event):
                    Level_1()
                if button2.is_clicked(event):
                    Level_2()
                if button3.is_clicked(event):
                    Level_3()

            button1.draw(screen)
            button2.draw(screen)
            button3.draw(screen)
            pygame.display.flip()

    if __name__ == "__main__":
        main()

main_menu()
