import pygame
import random
import sys

pygame.init()

press_sfx = pygame.mixer.Sound("press_sound effect.mp3")
win = pygame.display.set_mode((500, 700))
pygame.display.set_caption("First Game")

# Snake Movement
walkRight = [pygame.image.load('R1.png'), pygame.image.load('R2.png'), pygame.image.load('R3.png'),
             pygame.image.load('R4.png'), pygame.image.load('R5.png'), pygame.image.load('R6.png'),
             pygame.image.load('R7.png'), pygame.image.load('R8.png'), pygame.image.load('R9.png')]
walkLeft = [pygame.image.load('L1.png'), pygame.image.load('L2.png'), pygame.image.load('L3.png'),
            pygame.image.load('L4.png'), pygame.image.load('L5.png'), pygame.image.load('L6.png'),
            pygame.image.load('L7.png'), pygame.image.load('L8.png'), pygame.image.load('L9.png')]
walkUp = [pygame.image.load('UP1.png'), pygame.image.load('UP2.png'), pygame.image.load('UP3.png'),
          pygame.image.load('UP4.png'), pygame.image.load('UP5.png'), pygame.image.load('UP6.png'),
          pygame.image.load('UP7.png'), pygame.image.load('UP8.png'), pygame.image.load('UP9.png')]
walkDown = [pygame.image.load('DOWN1.png'), pygame.image.load('DOWN2.png'), pygame.image.load('DOWN3.png'),
            pygame.image.load('DOWN4.png'), pygame.image.load('DOWN5.png'), pygame.image.load('DOWN6.png'),
            pygame.image.load('DOWN7.png'), pygame.image.load('DOWN8.png'), pygame.image.load('DOWN9.png')]
bg = pygame.image.load('Game background.png')
snake_background = pygame.image.load('Snake background.png')
char = pygame.image.load('L9.png')

# Letters graphics
letters_imgs = {
    "A": pygame.image.load("Letter A.png"),
    "B": pygame.image.load("Letter B.png"),
    "C": pygame.image.load("Letter C.png"),
    "D": pygame.image.load("Letter D.png"),
    "E": pygame.image.load("Letter E.png"),
    "F": pygame.image.load("Letter F.png"),
    "G": pygame.image.load("Letter G.png"),
    "H": pygame.image.load("Letter H.png"),
    "I": pygame.image.load("Letter I.png"),
    "J": pygame.image.load("Letter J.png"),
    "K": pygame.image.load("Letter K.png"),
    "L": pygame.image.load("Letter L.png"),
    "M": pygame.image.load("Letter M.png"),
    "N": pygame.image.load("Letter N.png"),
    "O": pygame.image.load("Letter O.png"),
    "P": pygame.image.load("Letter P.png"),
    "Q": pygame.image.load("Letter Q.png"),
    "R": pygame.image.load("Letter R.png"),
    "S": pygame.image.load("Letter S.png"),
    "T": pygame.image.load("Letter T.png"),
    "U": pygame.image.load("Letter U.png"),
    "V": pygame.image.load("Letter V.png"),
    "W": pygame.image.load("Letter W.png"),
    "X": pygame.image.load("Letter X.png"),
    "Y": pygame.image.load("Letter Y.png"),
    "Z": pygame.image.load("Letter Z.png"),
}

# Class for enemy (letters)
class Enemy:
    def __init__(self, x, y, width, height, img):
        self.x = x
        self.y = y
        self.width = width
        self.height = height
        self.img = img
        self.rect = pygame.Rect(x, y, width, height)

    def draw(self, win):
        win.blit(self.img, (self.x, self.y))

# Function to redraw the game window
def redrawGameWindow():
    global walkCount

    win.blit(bg, (0, 0))
    win.blit(snake_background, (0, 0))
    if walkCount + 1 >= 27:
        walkCount = 0

    if left:
        win.blit(walkLeft[walkCount // 3], (x, y))
        walkCount += 1
    elif right:
        win.blit(walkRight[walkCount // 3], (x, y))
        walkCount += 1
    elif up:
        win.blit(walkUp[walkCount // 3], (x, y))
        walkCount += 1
    elif down:
        win.blit(walkDown[walkCount // 3], (x, y))
        walkCount += 1
    else:
        win.blit(char, (x, y))
        walkCount = 0

    enemy.draw(win)  # Draw the enemy
    pygame.display.update()

x = 50
y = 500
width = 40
height = 60
vel = 5

# List to keep track of collected letters
collected_letters = []

# List of words
words = ["MOLECULE", "COMPOUND", "CHEMICAL", "SOLVENT", "REACTANT"]

# Initialize index for the current word
word_index = 0

# Initial enemy (letter) position
enemy_x = random.randint(50, 300)
enemy_y = random.randint(50, 499)

# Create the first enemy with the first letter of the word
enemy = Enemy(enemy_x, enemy_y, 40, 40, letters_imgs[words[word_index][0]])

clock = pygame.time.Clock()

isJump = False
jumpCount = 10

left = False
right = False
up = False
down = False
walkCount = 0

run = True

while run:
    clock.tick(27)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    keys = pygame.key.get_pressed()

    if keys[pygame.K_LEFT] and x > 45:
        x -= vel
        left = True
        right = False
        up = False
        down = False
    elif keys[pygame.K_RIGHT] and x < 450 - vel - height:
        x += vel
        left = False
        right = True
        up = False
        down = False
    elif keys[pygame.K_UP] and y > vel:
        y -= vel
        left = False
        right = False
        up = True
        down = False
    elif keys[pygame.K_DOWN] and y < 620 - vel - width:
        y += vel
        left = False
        right = False
        up = False
        down = True

    else:
        left = False
        right = False
        up = False
        down = False
        walkCount = 0

    if not isJump:
        if keys[pygame.K_SPACE]:
            isJump = True
            left = False
            right = False
            walkCount = 0
    else:
        if jumpCount >= -10:
            y -= (jumpCount * abs(jumpCount)) * 0.5
            jumpCount -= 1
        else:
            jumpCount = 10
            isJump = False

    # Check for collision between player and enemy
    player_rect = pygame.Rect(x, y, width, height)
    if player_rect.colliderect(enemy.rect):
        press_sfx.play()
        # Check if the collided letter is the next letter in the word
        if collected_letters:
            if words[word_index][len(collected_letters) - 1] == collected_letters[-1]:
                # If all letters of the word are collected, move to the next word
                if len(collected_letters) == len(words[word_index]):
                    word_index = (word_index + 1) % len(words)
                    collected_letters.clear()
                # Spawn the next letter of the word
                if len(collected_letters) < len(words[word_index]):
                    enemy_x = random.randint(50, 300)
                    enemy_y = random.randint(50, 499)
                    enemy = Enemy(enemy_x, enemy_y, 40, 40, letters_imgs[words[word_index][len(collected_letters)]])
        collected_letters.append(words[word_index][len(collected_letters)])

    # Draw the game window
    redrawGameWindow()

pygame.quit()
